# Feature detection
is-macos() { [[ "$OSTYPE" =~ ^darwin ]] || return 1; }

is-executable() {
  type "$1" > /dev/null 2>&1 || return 1;
}

is-supported() {
  if [ $# -eq 1 ]; then
    if eval "$1" > /dev/null 2>&1; then true; else false; fi
  else
    if eval "$1" > /dev/null 2>&1; then
      echo -n "$2"
    else
      echo -n "$3"
    fi
  fi
}

# Add to path
prepend-path() {
  [ -d $1 ] && PATH="$1:$PATH"
}

# Open in Adobe Acrobat Reader
adobe() {
  open -a Adobe\ Acrobat\ Reader\ DC $1
}


# Update config file
set-config() {
  local KEY="$1"
  local VALUE="$2"
  local FILE="$3"
  touch "$FILE"
  if grep -q "$1=" "$FILE"; then
    sed "s@$KEY=.*@$KEY=\"$VALUE\"@" -i "$FILE"
  else
    echo "export $KEY=$VALUE" >> "$FILE"
  fi
}

# Generate environment.yml and .env file for autoenv
# http://efavdb.com/dotfiles/
function conda-env-file {
  # Create conda environment.yml file and autoenv activation file
  # based on directory name.
  autoenvfilename='.env'
  condaenvfilename='environment.yml'
  foldername=$(basename $PWD)
 
  if [ ! -f $condaenvfilename ]; then
    printf "name: $foldername\ndependencies:\n- pip\n- python\n- ipython\n- jedi\n- flake8" > $condaenvfilename
    echo "$condaenvfilename created."
  else
    echo "$condaenvfilename already exists."
  fi
 
  if [ ! -f $autoenvfilename ]; then
    printf "conda activate $foldername\n" > $autoenvfilename
    echo "$autoenvfilename created."
  else
    echo "$autoenvfilename already exists."
  fi
}

pyclean () {
    find . -type f -name '*.py[co]' -delete -o -type d -name __pycache__ -delete
}