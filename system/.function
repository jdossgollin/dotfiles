# BE ABLE TO RUN PYTHON COMMANDS IN A DOCKER CONTAINER
dpython(){
  docker run -v ${PWD}:/tmp/working -w=/tmp/working --rm -it jdossgollin/py3_science python "$@"
}
djupyter() {
  (open "http://localhost:8888") &
  docker run -it -p 8888:8888 --rm -v $PWD:/tmp/working -w=/tmp/working jdossgollin/py3_science /bin/bash -c "jupyter notebook --no-browser --ip='0.0.0.0' --allow-root --notebook-dir=/tmp/working & /bin/bash"
}
drstudio () {
  (open "http://localhost:8787") &
  docker run -it -p 8787:8787 --rm -v $PWD:/tmp/working -w=/tmp/working kaggle/rstats /bin/bash -c "rstudio-server restart & /bin/bash"
}



# Switch long/short prompt

ps0() {
  unset PROMPT_COMMAND
  PS1='$ '
}

ps1() {
  source "$DOTFILES_DIR"/system/.prompt
}

# Get named var (usage: get "VAR_NAME")

get() {
  echo "${!1}"
}

# Feature detection

is-macos() { [[ "$OSTYPE" =~ ^darwin ]] || return 1; }

is-executable() {
  type "$1" > /dev/null 2>&1 || return 1;
}

is-supported() {
  if [ $# -eq 1 ]; then
    if eval "$1" > /dev/null 2>&1; then true; else false; fi
  else
    if eval "$1" > /dev/null 2>&1; then
      echo -n "$2"
    else
      echo -n "$3"
    fi
  fi
}

# Add to path

prepend-path() {
  [ -d $1 ] && PATH="$1:$PATH"
}

# Update config file

set-config() {
  local KEY="$1"
  local VALUE="$2"
  local FILE="$3"
  touch "$FILE"
  if grep -q "$1=" "$FILE"; then
    sed "s@$KEY=.*@$KEY=\"$VALUE\"@" -i "$FILE"
  else
    echo "export $KEY=$VALUE" >> "$FILE"
  fi
}

# Show 256 TERM colors

colors() {
  local X=$(tput op)
  local Y=$(printf %$((COLUMNS-6))s)
  for i in {0..256}; do
  o=00$i;
  echo -e ${o:${#o}-3:3} $(tput setaf $i;tput setab $i)${Y// /=}$X;
  done
}

# Calculator

calc() {
  echo "$*" | bc -l;
}

# Weather

meteo() {
  local LOCALE=`echo ${LANG:-en} | cut -c1-2`
  if [ $# -eq 0 ]; then
    local LOCATION=`curl -s ipinfo.io/loc`
  else
    local LOCATION=$1
  fi
  curl -s "$LOCALE.wttr.in/$LOCATION"
}

# Markdown

md() {
  pandoc $1 | lynx -stdin -dump
}

# Visual Studio Code
code () {
if [[ $# = 0 ]]
then
    open -a "Visual Studio Code"
else
    [[ $1 = /* ]] && F="$1" || F="$PWD/${1#./}"
    open -a "Visual Studio Code" --args "$F"
fi
}